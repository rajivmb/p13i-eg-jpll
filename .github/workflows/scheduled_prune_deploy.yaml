name: Publish package to the internal Maven Repository
on:
  workflow_dispatch:
  schedule:
  - cron:  "0 0 * * 0" #Every Sunday at midnight
jobs:
  #purge:
  #  name: "Perform purging of a version and all it's assets in the process"
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/delete-package-versions@v1
    #- name: Delete SNAPSHOT version
    #  run: docker run jcansdale/gpr:0.1.226 delete rajivmb/p13i-mvn-repo/com.p13i.mit.aws.example.p13i-java-parent-example -k ${{ secrets.WORKFLOW_TOKEN }} --version 1.0.0-SNAPSHOT --force
  deploy:
    name: "Perform Maven deploy"
    #needs: purge
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Fetch package version id
        run: |
          curl -X POST \
            -s \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: bearer ${{ secrets.WORKFLOW_TOKEN }}" \
            -d '{"query": "query {user(login: \"rajivmb\") { packages(first: 1, names: \"com.p13i.mit.aws.example.p13i-java-parent-example\") { nodes { version(version: \"1.0.0-SNAPSHOT\") { id } } } } }"}' \
            -o /tmp/response.json \
            --url https://api.github.com/graphql
      #- name: Filter Releases
      #  run: "cat /tmp/response.json | jq -r 'def daysAgo(days): (now | floor) - (days * 86400); [.data.repository.registryPackages.edges[0].node.versions.edges | sort_by(.node.updatedAt|fromdate) | reverse | .[] | select( .node.version != \"docker-base-layer\" ) | .value[].node.id] | unique_by(.) | @csv'  | cut -d, -f1  | sed -e 's/^\"//' -e 's/\"$//' > /tmp/release.json"
      - name: Set version id as env
        run: cat /tmp/response.json | echo `jq '.data.user.packages.nodes[0].version.id'` > /tmp/package_version_id
      - name: Delete package version by id
        run: cat /tmp/package_version_id
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Maven artifacts
        uses: actions/cache@v2
        env:
          cache-name: m2-cache
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Publish package
        run: mvn deploy -s settings.xml -Drepo.id=internal.repo -Drepo.username=$GITHUB_USERNAME -Drepo.token=$GITHUB_TOKEN -Dinternal.repo.url=$INTERNAL_REPO_URL -DaltDeploymentRepository=internal.repo::default::$INTERNAL_REPO_URL
        env:
          INTERNAL_REPO_URL: "https://maven.pkg.github.com/rajivmb/p13i-mvn-repo"
          GITHUB_USERNAME: ${{ secrets.WORKFLOW_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
